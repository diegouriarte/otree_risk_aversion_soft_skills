theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=12,face = "bold")) +
theme(axis.title.y = element_text(size=14), axis.text.y = element_text(size=12,face = "bold", hjust = 1)) +
scale_x_discrete( labels = c("1" = expression(paste("[2.2, ", infinity, ")")),
"2" = "(0.75, 2.2]",
"3" = "(0.44, 0.75]",
"4" = "(0.28, 0.44]",
"5" = "(0, 0.28]",
"6" = expression(paste("(", -infinity, ", 0.28]"))))
ggsave("bar_loteria.eps",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
filas <- c("lottery_game.1.player.loteria","lottery_game.2.player.loteria",
"lottery_game.3.player.loteria","lottery_game.4.player.loteria",
"lottery_game.5.player.loteria")
#definimos función moda
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
data_filtrada$median_loto<- apply(data_filtrada[,filas],1, median)
data_filtrada$mode_loto <- apply(data_filtrada[,filas],1,getmode)
data_filtrada$median_loto <- factor(data_filtrada$median_loto)
data_filtrada$mode_loto <- factor(data_filtrada$mode_loto)
data_filtrada %>%
group_by(median_loto) %>%
summarise(number = n()) %>%
ggplot(aes(x = median_loto, y = number)) + geom_bar(stat='identity') +
labs(x = "Loteria Elegida",y  = "Número de participantes") +
geom_text(aes(label=number), vjust=-0.4, color="black", fontface = "bold", position = position_dodge(0.9), size=3.5)
data_filtrada %>%
group_by(mode_loto) %>%
summarise(number = n()) %>%
ggplot(aes(x = mode_loto, y = number)) + geom_bar(stat='identity', colour="black", fill="white") +
labs(x = "Lotería Elegida (Rango de valor de r - aversión al riesgo",y  = "Número de participantes") +
geom_text(aes(label=number), vjust=-0.4, color="black", fontface = "bold", position = position_dodge(0.9), size=3.5)  +
theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=12,face = "bold")) +
theme(axis.title.y = element_text(size=14), axis.text.y = element_text(size=12,face = "bold", hjust = 1)) +
scale_x_discrete( labels = c("1" = expression(paste("[2.2, ", infinity, ")")),
"2" = "(0.75, 2.2]",
"3" = "(0.44, 0.75]",
"4" = "(0.28, 0.44]",
"5" = "(0, 0.28]",
"6" = expression(paste("(", -infinity, ", 0.28]"))))
ggsave("bar_loteria.eps",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
filas <- c("lottery_game.1.player.loteria","lottery_game.2.player.loteria",
"lottery_game.3.player.loteria","lottery_game.4.player.loteria",
"lottery_game.5.player.loteria")
#definimos función moda
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
data_filtrada$median_loto<- apply(data_filtrada[,filas],1, median)
data_filtrada$mode_loto <- apply(data_filtrada[,filas],1,getmode)
data_filtrada$median_loto <- factor(data_filtrada$median_loto)
data_filtrada$mode_loto <- factor(data_filtrada$mode_loto)
data_filtrada %>%
group_by(median_loto) %>%
summarise(number = n()) %>%
ggplot(aes(x = median_loto, y = number)) + geom_bar(stat='identity') +
labs(x = "Loteria Elegida",y  = "Número de participantes") +
geom_text(aes(label=number), vjust=-0.4, color="black", fontface = "bold", position = position_dodge(0.9), size=3.5)
data_filtrada %>%
group_by(mode_loto) %>%
summarise(number = n()) %>%
ggplot(aes(x = mode_loto, y = number)) + geom_bar(stat='identity', colour="black", fill="white") +
labs(x = "Lotería Elegida (rango de valor de r)",y  = "Número de participantes") +
geom_text(aes(label=number), vjust=-0.4, color="black", fontface = "bold", position = position_dodge(0.9), size=3.5)  +
theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=12,face = "bold")) +
theme(axis.title.y = element_text(size=14), axis.text.y = element_text(size=12,face = "bold", hjust = 1)) +
scale_x_discrete( labels = c("1" = expression(paste("[2.2, ", infinity, ")")),
"2" = "(0.75, 2.2]",
"3" = "(0.44, 0.75]",
"4" = "(0.28, 0.44]",
"5" = "(0, 0.28]",
"6" = expression(paste("(", -infinity, ", 0.28]"))))
ggsave("bar_loteria.eps",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28),
ifelse(mode_loto == 5, 0, -0.5))))
)
data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
str(data_filtrada$r_loto)
data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
head(data_filtrada$r_loto)
data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
head(filter(data_filtrada, r_loto))
data_filtrada <- data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
head(filter(data_filtrada, r_loto))
data_filtrada <- data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
head(select(data_filtrada, r_loto))
data_filtrada <- data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
ggplot(data = data_filtrada, aes(x = r_loto, y = r_box_avg)) + geom_point()
data_filtrada <- data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
ggplot(data = data_filtrada, aes(x = r_loto, y = r_box_avg)) + geom_point() + + geom_smooth(method = "lm")
data_filtrada <- data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
ggplot(data = data_filtrada, aes(x = r_loto, y = r_box_avg)) + geom_point() + geom_smooth(method = "lm")
data_filtrada <- data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
ggplot(data = data_filtrada, aes(x = r_loto, y = r_box_avg)) + geom_point() + geom_smooth(method = "lm") +
labs(x = "Valor de r - Test de loterías", y = "Valor de r - Test BRET") +
ggsave("comp_aversion.eps",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
data_filtrada <- data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
ggplot(data = data_filtrada, aes(x = r_loto, y = r_box_avg)) + geom_point() + geom_smooth(method = "lm") +
labs(x = "Valor de r - Test de loterías", y = "Valor de r - Test BRET") +
ggsave("comp_aversion.pdf",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
data_filtrada %>%
filter(r_box_avg < 10) %>%
ggplot(aes(y = r_box_avg, x = extraversion)) + geom_point()
data_filtrada %>%
ggplot(aes(y = r_box_avg, x = extraversion.f)) + geom_dotplot()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(knitr)
library(reshape2)
library("ggthemes")
# establecemos directorio para imágenes
pic_latex = "C:/Users/diego/Documents/GitHub/exp_economics/images"
# data = read.csv('data_17.14.18_14_24.csv')
data = read.csv('data_18.14.18_07_44.csv')
data_filtrada <- data %>%
filter(session.code == "jf1jsn1m", participant._current_page_name == "TotalResults")
data_filtrada %>%
select(ingreso_datos.1.player.gender, ingreso_datos.1.player.age) %>%
summary
data_filtrada %>%
select(ingreso_datos.1.player.gender, ingreso_datos.1.player.age) %>%
filter(ingreso_datos.1.player.gender == "Mujer") %>%
summary
data_filtrada %>%
select(ingreso_datos.1.player.gender, ingreso_datos.1.player.age) %>%
filter(ingreso_datos.1.player.gender == "Hombre") %>%
summary
data_filtrada %>%
select(ingreso_datos.1.player.gender, ingreso_datos.1.player.age) %>%
ggplot(aes(x = ingreso_datos.1.player.age)) + geom_histogram(colour="black", fill="white") + labs( x = 'Edad de participantes') + theme(axis.title.x = element_text(size = 12), axis.text.x = element_text(size=10,face = "bold", hjust = 1)) +
theme(axis.title.y = element_text(size=12))
ggsave("age_histrogam.eps",
path = pic_latex)
big_five <- c('extraversion','amabilidad','responsabilidad','estabilidad_emocional','apertura_cambio')
# se agregan las columnas con los cálculos de cada rasgo de personalidad
data_filtrada <- data_filtrada %>%
mutate(extraversion = (ingreso_datos.1.player.Q1 + 7 - ingreso_datos.1.player.Q6 + 1)/2,
amabilidad = (ingreso_datos.1.player.Q7 + 7 - ingreso_datos.1.player.Q2 + 1)/2,
responsabilidad = (ingreso_datos.1.player.Q3 + 7 - ingreso_datos.1.player.Q8 + 1)/2,
estabilidad_emocional = (ingreso_datos.1.player.Q9 + 7 - ingreso_datos.1.player.Q4 + 1)/2,
apertura_cambio = (ingreso_datos.1.player.Q5 + 7 - ingreso_datos.1.player.Q10 + 1)/2)
# se filtra solo las columnas relacionadas al FIPI
data_TIPI <- data_filtrada %>%
select('participant.id_in_session', big_five)
str(data_TIPI)
# convertimos las observaciones de las columnas de big_five en datos para poder plotear en una sola gráfica
data_TIPI_melt<- melt(data_TIPI, id.vars=c("participant.id_in_session"))
data_TIPI_melt$variable <- factor(data_TIPI_melt$variable, levels=big_five, labels=c("Extraversión (E)", "Amabilidad (A)",
"Responsabilidad (C)", "Estabilidad Emocional (ES)",
"Apertura al Cambio (O)"))
plot1 <- ggplot(data_TIPI_melt, aes(x=variable, y=value, color=variable)) +
geom_boxplot()  +
geom_dotplot(binaxis='y', stackdir='center', dotsize=0.5, aes(fill = variable))+
labs(x="Rasgos de Personalidad", y="Valor TIPI")  +   theme(axis.title.x = element_text(face="bold", size = 14), axis.text.x = element_text(size=10, hjust = 1)) +
theme(axis.title.y = element_text(face="bold", size=14)) +
theme(legend.position="right") +
scale_x_discrete( labels = c("Extraversión (E)" = "E", "Amabilidad (A)" = "A", "Responsabilidad (C)" = "C",
"Estabilidad Emocional (ES)" = "ES", "Apertura al Cambio (O)" = "O"))
plot1
ggsave("TIPI.eps",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
# Valores promedio
data_filtrada %>%
select(big_five) %>%
sapply(.,mean)
# Valores SD
data_filtrada %>%
select(big_five) %>%
sapply(.,sd)
#se crea una nueva columna con el promedio de cajas recolectadas y otra con la cantidad máxima de cajas recolectadas.
bret_vector = c("bret.1.player.boxes_collected","bret.2.player.boxes_collected",
"bret.3.player.boxes_collected","bret.4.player.boxes_collected",
"bret.5.player.boxes_collected")
data_filtrada <- data_filtrada %>%
mutate(avg_box_collected = rowMeans(select(data_filtrada,ends_with(".player.boxes_collected"))),
max_box_collected = pmax(data_filtrada$bret.1.player.boxes_collected,data_filtrada$bret.2.player.boxes_collected,
data_filtrada$bret.3.player.boxes_collected,data_filtrada$bret.4.player.boxes_collected,
data_filtrada$bret.5.player.boxes_collected),
avg_box_two_collected = rowMeans(select(data_filtrada,bret.4.player.boxes_collected, bret.5.player.boxes_collected)))
head(select(data_filtrada, ends_with("_collected")))
data_filtrada <- data_filtrada %>%
mutate(r_box_avg = (100-2*avg_box_collected)/(avg_box_collected+100),
r_box_max = (100-2*max_box_collected)/(max_box_collected+100),
r_box_two = (100-2*avg_box_two_collected)/(avg_box_two_collected+100))
head(select(data_filtrada, starts_with("r_box")))
ggplot(filter(data_filtrada, r_box_max < 20), aes(x=r_box_max)) + geom_histogram(binwidth = 0.25,colour="black", fill="white") +
labs(x="Coeficiente de aversión al riesgo (BRET)", y = "# Participantes")  +   theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=12,face = "bold", hjust = 1)) +
theme(axis.title.y = element_text(size=14), axis.text.y = element_text(size=12,face = "bold", hjust = 1))
ggsave("histo_bret.eps",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
ggplot(filter(data_filtrada, r_box_max < 20), aes(x=r_box_two)) + geom_histogram(binwidth = 0.25,colour="black", fill="white") +
labs(x="Coeficiente de aversión al riesgo (BRET)", y = "# Participantes")  +   theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=12,face = "bold", hjust = 1)) +
theme(axis.title.y = element_text(size=14), axis.text.y = element_text(size=12,face = "bold", hjust = 1))
ggsave("histo_bret_two.eps",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
# ggplot(filter(data_filtrada, r_box_avg < 20, ingreso_datos.1.player.gender == "Mujer"), aes(x=r_box_avg)) + geom_histogram(bin=0.1) +
#   labs(title = "Aversión al riesgo de Menores de Mujeres")
#
# ggplot(filter(data_filtrada, r_box_avg < 20, ingreso_datos.1.player.gender == "Hombre"), aes(x=r_box_avg)) + geom_histogram(bin=0.1) +
#   labs(title = "Aversión al riesgo de Menores de Hombres")
#
# data_filtrada %>%
#   filter(r_box_avg < 20,ingreso_datos.1.player.gender == "Mujer") %>%
#   select(r_box_avg) %>%
#   summary
#MW test
str(select(data_filtrada, ingreso_datos.1.player.gender))
wilcox.test(r_box_avg ~ ingreso_datos.1.player.gender, data = filter(data_filtrada, ingreso_datos.1.player.gender == "Hombre" | ingreso_datos.1.player.gender == "Mujer"))
data_filtrada %>%
filter(r_box_avg < 20, ingreso_datos.1.player.gender == "Hombre") %>%
select(r_box_avg) %>%
summary
filas <- c("lottery_game.1.player.loteria","lottery_game.2.player.loteria",
"lottery_game.3.player.loteria","lottery_game.4.player.loteria",
"lottery_game.5.player.loteria")
#definimos función moda
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
data_filtrada$median_loto<- apply(data_filtrada[,filas],1, median)
data_filtrada$mode_loto <- apply(data_filtrada[,filas],1,getmode)
data_filtrada$median_loto <- factor(data_filtrada$median_loto)
data_filtrada$mode_loto <- factor(data_filtrada$mode_loto)
data_filtrada %>%
group_by(median_loto) %>%
summarise(number = n()) %>%
ggplot(aes(x = median_loto, y = number)) + geom_bar(stat='identity') +
labs(x = "Loteria Elegida",y  = "Número de participantes") +
geom_text(aes(label=number), vjust=-0.4, color="black", fontface = "bold", position = position_dodge(0.9), size=3.5)
data_filtrada %>%
group_by(mode_loto) %>%
summarise(number = n()) %>%
ggplot(aes(x = mode_loto, y = number)) + geom_bar(stat='identity', colour="black", fill="white") +
labs(x = "Lotería Elegida (rango de valor de r)",y  = "Número de participantes") +
geom_text(aes(label=number), vjust=-0.4, color="black", fontface = "bold", position = position_dodge(0.9), size=3.5)  +
theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=12,face = "bold")) +
theme(axis.title.y = element_text(size=14), axis.text.y = element_text(size=12,face = "bold", hjust = 1)) +
scale_x_discrete( labels = c("1" = expression(paste("[2.2, ", infinity, ")")),
"2" = "(0.75, 2.2]",
"3" = "(0.44, 0.75]",
"4" = "(0.28, 0.44]",
"5" = "(0, 0.28]",
"6" = expression(paste("(", -infinity, ", 0.28]"))))
ggsave("bar_loteria.eps",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
ggplot(filter(data_filtrada, r_box_avg < 10), aes(x=median_loto, y=r_box_avg, factor=median_loto)) +
geom_boxplot()
#          geom_dotplot(binaxis='y', stackdir='center', dotsize=0.5)
ggplot(filter(data_filtrada, r_box_avg < 10), aes(x=mode_loto, y=r_box_avg, factor=mode_loto)) +
geom_boxplot()  +   labs(x = "Lotería Elegida (Tarea 2)",y  = "Aversión al riesgo (BRET - Tarea 1)")
#          geom_dotplot(binaxis='y', stackdir='center', dotsize=0.5)
data_filtrada <- data_filtrada %>%
mutate(r_loto = ifelse(mode_loto == 1, 2.2,
ifelse(mode_loto == 2, 0.75,
ifelse(mode_loto == 3, 0.44,
ifelse(mode_loto == 4, 0.28,
ifelse(mode_loto == 5, 0, -0.5)))))
)
ggplot(data = data_filtrada, aes(x = r_loto, y = r_box_avg)) + geom_point() + geom_smooth(method = "lm") +
labs(x = "Valor de r - Test de loterías", y = "Valor de r - Test BRET") +
ggsave("comp_aversion.pdf",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
big_five.f <- c('extraversion.f','amabilidad.f','responsabilidad.f','estabilidad_emocional.f','apertura_cambio.f')
data_filtrada$extraversion.f <- factor(data_filtrada[,'extraversion'])
data_filtrada$amabilidad.f <- factor(data_filtrada[,'amabilidad'])
data_filtrada$responsabilidad.f <- factor(data_filtrada[,'responsabilidad'])
data_filtrada$estabilidad_emocional.f <- factor(data_filtrada[,'estabilidad_emocional'])
data_filtrada$apertura_cambio.f <- factor(data_filtrada[,'apertura_cambio'])
str(select(data_filtrada, big_five.f))
summary(lm(r_box_avg ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
summary(lm(r_box_max ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
data_filtrada %>%
filter(r_box_avg < 10) %>%
ggplot(aes(y = r_box_avg, x = extraversion)) + geom_point()
data_filtrada %>%
ggplot(aes(y = r_box_avg, x = extraversion.f)) + geom_dotplot()
data_filtrada %>%
filter(r_box_avg < 10) %>%
mutate(grado_extroversion = ifelse(extraversion > 4, "más extrovertido", ifelse(extraversion == 4, "neutral","menos extrovertido") )) %>%
ggplot(aes(y = r_box_avg, x = grado_extroversion, factor = grado_extroversion)) + geom_boxplot()+  labs(x = "Extraversión",y  = "Aversión al riesgo")  +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
mutate(grado_responsabilidad = ifelse(extraversion > 4, "más responsable", ifelse(extraversion == 4, "neutral","menos responsable") )) %>%
ggplot(aes(y = r_box_avg, x = grado_responsabilidad, factor = grado_responsabilidad)) + geom_boxplot() +  labs(x = "Responsabilidad",y  = "Aversión al riesgo")   +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
filter(r_box_avg < 10) %>%
ggplot(aes(y = r_box_avg, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
ggplot(aes(y = r_box_avg, x = extraversion.f)) + geom_dotplot()
data_filtrada %>%
filter(r_box_avg < 10) %>%
mutate(grado_extroversion = ifelse(extraversion > 4, "más extrovertido", ifelse(extraversion == 4, "neutral","menos extrovertido") )) %>%
ggplot(aes(y = r_box_avg, x = grado_extroversion, factor = grado_extroversion)) + geom_boxplot()+  labs(x = "Extraversión",y  = "Aversión al riesgo")  +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
mutate(grado_responsabilidad = ifelse(extraversion > 4, "más responsable", ifelse(extraversion == 4, "neutral","menos responsable") )) %>%
ggplot(aes(y = r_box_avg, x = grado_responsabilidad, factor = grado_responsabilidad)) + geom_boxplot() +  labs(x = "Responsabilidad",y  = "Aversión al riesgo")   +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
filter(r_box_avg < 10) %>%
ggplot(aes(y = r_box_avg, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
ggplot(aes(y = r_box_two, x = extraversion.f)) + geom_dotplot()
data_filtrada %>%
filter(r_box_avg < 10) %>%
mutate(grado_extroversion = ifelse(extraversion > 4, "más extrovertido", ifelse(extraversion == 4, "neutral","menos extrovertido") )) %>%
ggplot(aes(y = r_box_avg, x = grado_extroversion, factor = grado_extroversion)) + geom_boxplot()+  labs(x = "Extraversión",y  = "Aversión al riesgo")  +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
mutate(grado_responsabilidad = ifelse(extraversion > 4, "más responsable", ifelse(extraversion == 4, "neutral","menos responsable") )) %>%
ggplot(aes(y = r_box_avg, x = grado_responsabilidad, factor = grado_responsabilidad)) + geom_boxplot() +  labs(x = "Responsabilidad",y  = "Aversión al riesgo")   +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
filter(r_box_avg < 10) %>%
ggplot(aes(y = r_box_two, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
ggplot(aes(y = r_box_two, x = extraversion.f)) + geom_dotplot()
data_filtrada %>%
filter(r_box_avg < 10) %>%
mutate(grado_extroversion = ifelse(extraversion > 4, "más extrovertido", ifelse(extraversion == 4, "neutral","menos extrovertido") )) %>%
ggplot(aes(y = r_box_avg, x = grado_extroversion, factor = grado_extroversion)) + geom_boxplot()+  labs(x = "Extraversión",y  = "Aversión al riesgo")  +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
mutate(grado_responsabilidad = ifelse(extraversion > 4, "más responsable", ifelse(extraversion == 4, "neutral","menos responsable") )) %>%
ggplot(aes(y = r_box_avg, x = grado_responsabilidad, factor = grado_responsabilidad)) + geom_boxplot() +  labs(x = "Responsabilidad",y  = "Aversión al riesgo")   +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
filter(r_box_two < 0.75) %>%
ggplot(aes(y = r_box_two, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
ggplot(aes(y = r_box_two, x = extraversion.f)) + geom_dotplot()
data_filtrada %>%
filter(r_box_avg < 10) %>%
mutate(grado_extroversion = ifelse(extraversion > 4, "más extrovertido", ifelse(extraversion == 4, "neutral","menos extrovertido") )) %>%
ggplot(aes(y = r_box_avg, x = grado_extroversion, factor = grado_extroversion)) + geom_boxplot()+  labs(x = "Extraversión",y  = "Aversión al riesgo")  +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
mutate(grado_responsabilidad = ifelse(extraversion > 4, "más responsable", ifelse(extraversion == 4, "neutral","menos responsable") )) %>%
ggplot(aes(y = r_box_avg, x = grado_responsabilidad, factor = grado_responsabilidad)) + geom_boxplot() +  labs(x = "Responsabilidad",y  = "Aversión al riesgo")   +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
filter(r_box_two < 0.75) %>%
ggplot(aes(y = r_box_two, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.75) %>%
ggplot(aes(y = r_box_two, x = amabilidad)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.50) %>%
ggplot(aes(y = r_box_two, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.50) %>%
ggplot(aes(y = r_box_two, x = amabilidad)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = amabilidad)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = responsabilidad)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = estabilidad_emocional)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = apertura_cambio)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_avg < 10) %>%
mutate(grado_extroversion = ifelse(extraversion > 4, "más extrovertido", ifelse(extraversion == 4, "neutral","menos extrovertido") )) %>%
ggplot(aes(y = r_box_avg, x = grado_extroversion, factor = grado_extroversion)) + geom_boxplot()+  labs(x = "Extraversión",y  = "Aversión al riesgo")  +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
mutate(grado_responsabilidad = ifelse(extraversion > 4, "más responsable", ifelse(extraversion == 4, "neutral","menos responsable") )) %>%
ggplot(aes(y = r_box_avg, x = grado_responsabilidad, factor = grado_responsabilidad)) + geom_boxplot() +  labs(x = "Responsabilidad",y  = "Aversión al riesgo")   +  theme(axis.title.x = element_text(size = 14), axis.text.x = element_text(size=10,face = "bold")) +
theme(axis.title.y = element_text(size=14))
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = amabilidad)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = responsabilidad)) + geom_point() + geom_smooth(method = "lm") +
title(x = "Responsabilidad", y = "r - Aversión al Riesgo")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = extraversion)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = amabilidad)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = responsabilidad)) + geom_point() + geom_smooth(method = "lm") +
labs(x = "Responsabilidad", y = "r - Aversión al Riesgo")
ggsave("responsabilidad.pdf",path = pic_latex, width = 20, height = 12, dpi = 1200, units = "cm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = estabilidad_emocional)) + geom_point() + geom_smooth(method = "lm")
data_filtrada %>%
filter(r_box_two < 0.7) %>%
ggplot(aes(y = r_box_two, x = apertura_cambio)) + geom_point() + geom_smooth(method = "lm")
big_five.f <- c('extraversion.f','amabilidad.f','responsabilidad.f','estabilidad_emocional.f','apertura_cambio.f')
data_filtrada$extraversion.f <- factor(data_filtrada[,'extraversion'])
data_filtrada$amabilidad.f <- factor(data_filtrada[,'amabilidad'])
data_filtrada$responsabilidad.f <- factor(data_filtrada[,'responsabilidad'])
data_filtrada$estabilidad_emocional.f <- factor(data_filtrada[,'estabilidad_emocional'])
data_filtrada$apertura_cambio.f <- factor(data_filtrada[,'apertura_cambio'])
str(select(data_filtrada, big_five.f))
#summary(lm(r_box_avg ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
summary(lm(r_box_two ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
big_five.f <- c('extraversion.f','amabilidad.f','responsabilidad.f','estabilidad_emocional.f','apertura_cambio.f')
data_filtrada$extraversion.f <- factor(data_filtrada[,'extraversion'])
data_filtrada$amabilidad.f <- factor(data_filtrada[,'amabilidad'])
data_filtrada$responsabilidad.f <- factor(data_filtrada[,'responsabilidad'])
data_filtrada$estabilidad_emocional.f <- factor(data_filtrada[,'estabilidad_emocional'])
data_filtrada$apertura_cambio.f <- factor(data_filtrada[,'apertura_cambio'])
str(select(data_filtrada, big_five.f))
#summary(lm(r_box_avg ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
summary(lm(r_box_two ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
big_five.f <- c('extraversion.f','amabilidad.f','responsabilidad.f','estabilidad_emocional.f','apertura_cambio.f')
data_filtrada$extraversion.f <- factor(data_filtrada[,'extraversion'])
data_filtrada$amabilidad.f <- factor(data_filtrada[,'amabilidad'])
data_filtrada$responsabilidad.f <- factor(data_filtrada[,'responsabilidad'])
data_filtrada$estabilidad_emocional.f <- factor(data_filtrada[,'estabilidad_emocional'])
data_filtrada$apertura_cambio.f <- factor(data_filtrada[,'apertura_cambio'])
#str(select(data_filtrada, big_five.f))
#summary(lm(r_box_avg ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
summary(lm(r_box_two ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
big_five.f <- c('extraversion.f','amabilidad.f','responsabilidad.f','estabilidad_emocional.f','apertura_cambio.f')
data_filtrada$extraversion.f <- factor(data_filtrada[,'extraversion'])
data_filtrada$amabilidad.f <- factor(data_filtrada[,'amabilidad'])
data_filtrada$responsabilidad.f <- factor(data_filtrada[,'responsabilidad'])
data_filtrada$estabilidad_emocional.f <- factor(data_filtrada[,'estabilidad_emocional'])
data_filtrada$apertura_cambio.f <- factor(data_filtrada[,'apertura_cambio'])
#str(select(data_filtrada, big_five.f))
#summary(lm(r_box_avg ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
summary(lm(r_box_two ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = filter(data_filtrada, r_box_two < 0.75)))
big_five.f <- c('extraversion.f','amabilidad.f','responsabilidad.f','estabilidad_emocional.f','apertura_cambio.f')
data_filtrada$extraversion.f <- factor(data_filtrada[,'extraversion'])
data_filtrada$amabilidad.f <- factor(data_filtrada[,'amabilidad'])
data_filtrada$responsabilidad.f <- factor(data_filtrada[,'responsabilidad'])
data_filtrada$estabilidad_emocional.f <- factor(data_filtrada[,'estabilidad_emocional'])
data_filtrada$apertura_cambio.f <- factor(data_filtrada[,'apertura_cambio'])
#str(select(data_filtrada, big_five.f))
summary(lm(r_box_avg ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = data_filtrada))
#summary(lm(r_box_two ~ extraversion + amabilidad + responsabilidad + estabilidad_emocional + apertura_cambio, data = filter(data_filtrada, r_box_two < 0.75)))
